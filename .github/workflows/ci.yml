name: CI

on:
  push:
    branches: [enable-ci]
  pull_request:
    branches: [enable-ci]

jobs:
  build-and-test:
    name: build-and-test-${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, macos-14, macos-13, macos-12, windows-2022, windows-2019]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '3.1.x'

    - name: Install Ubuntu dependencies
      if: runner.os == 'Linux'
      run: |
        sudo add-apt-repository ppa:alex-p/tesseract-ocr-devel
        sudo apt-get update
        sudo apt-get install tesseract-ocr

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        brew install tesseract
        ls -lh /usr/local/lib

    - name: Restore dependencies
      run: dotnet restore src/Tesseract.sln

    - name: Build
      run: dotnet build src/Tesseract.sln --no-restore

    - name: Check .NET Core 3.1
      if: runner.os == 'macOS' || runner.os == 'Linux'
      run: ls -lh src/Tesseract.NetCore31Tests/bin/Debug/netcoreapp3.1/x64

    - name: Check .NET Framework 4.8
      if: runner.os == 'macOS' || runner.os == 'Linux'
      run: ls -lh src/Tesseract.Net48Tests/bin/Debug/net48/x64

    - name: Test
      run: dotnet test src/Tesseract.sln --no-build --verbosity normal --logger trx --results-directory "TestResults"

    - name: Upload dotnet test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results
        path: TestResults
      if: ${{ always() }}
